{
  "prefix": "PREFIX music: <http://www.semanticweb.org/lorenzo/ontologies/music#>",
  "free": {
    "musicians": "SELECT ?Musician ?Age (group_concat(?SubClass; separator=\", \") as ?Type) ?Band WHERE { ?MusicianItem a ?SubClass. ?MusicianItem rdfs:label ?Musician. FILTER(LANG(?Musician) = \"en\"). OPTIONAL { ?MusicianItem music:age ?Age . } OPTIONAL {?BandItem rdfs:label ?Band. FILTER(LANG(?Band) = \"en\"). ?BandItem music:hasComponent ?MusicianItem .} FILTER(?SubClass != music:Musician && EXISTS{ ?SubClass rdfs:subClassOf music:Musician})} group by ?Musician ?Age ?Band",
    "musicians_only_bands": "SELECT ?Musician ?Age ?Band WHERE { ?Band music:hasComponent ?Musician . OPTIONAL {?Musician music:age ?Age}} ORDER BY ?Band",
    "musicians_only_solists": "SELECT ?Musician ?Age (group_concat(?SubClass; separator=\", \") as ?Type) WHERE { ?Musician a ?SubClass. OPTIONAL { ?Musician music:age ?Age . } OPTIONAL {?Band music:hasComponent ?Musician .} FILTER(NOT EXISTS { ?Musician music:componentOf ?Band } && ?SubClass != music:Musician && EXISTS{ ?SubClass rdfs:subClassOf music:Musician})} group by ?Musician ?Age",
    "albums": "SELECT ?Album ?Owner ?Sales ?Certificate ?Release_Date WHERE { ?item music:hasAlbum ?AlbumItem . ?AlbumItem rdfs:label ?Album . FILTER(LANG(?Album) = \"en\"). BIND(?item AS ?Owner) OPTIONAL {?CertificateItem rdfs:label ?Certificate . FILTER(LANG(?Certificate) = \"en\").?AlbumItem music:hasCertification ?CertificateItem. } { ?AlbumItem music:salesCount ?Sales. } OPTIONAL { ?AlbumItem music:releaseDate ?Release_Date. } }",
    "songs": "SELECT ?Song ?Composer ?Album WHERE {OPTIONAL { ?AlbumItem a music:Album. ?AlbumItem music:contains ?SongItem . ?AlbumItem rdfs:label ?Album. FILTER(LANG(?Album) = \"en\")} ?SongItem music:writtenBy ?Composer . ?SongItem rdfs:label ?Song . FILTER(LANG(?Song) = \"en\")}",
    "genres": "SELECT ?Genre (COUNT(?Song) AS ?Songs) WHERE { ?Genre a music:Genre. ?Song music:hasGenre ?Genre. } GROUP BY ?Genre",
    "events": "SELECT ?Event ?Type ?City ?Nation ?Continent WHERE { ?EventItem music:locatedIn ?City. ?City music:locatedIn ?Nation. ?Nation music:locatedIn ?Continent. ?EventItem rdfs:label ?Event. ?EventItem rdf:type ?Type. ?Type rdfs:subClassOf music:Event. FILTER(LANG(?Event) = \"en\")}",
    "labels": "SELECT ?Music_Label ?Musician ?Producer WHERE { ?Music_Label_Item music:hasHired ?Musician. ?Musician a music:Musician. OPTIONAL { ?Music_Label_Item music:hasHired ?Producer. ?Producer a music:Producer. ?Music_Label_Item rdfs:label ?Music_Label. FILTER(LANG(?Music_Label) = \"en\")} }"
  },
  "parametrized": {
    "musicians": "SELECT ?Musician ?Age (group_concat(?SubClass; separator=\", \") as ?Type) ?Band WHERE {{ ?MusicianItem a ?SubClass. ?MusicianItem rdfs:label ?Musician. OPTIONAL {{ ?MusicianItem musica:et\\u00E0 ?Age . }} OPTIONAL {{?BandItem rdfs:label ?Band. ?BandItem musica:haComponente ?MusicianItem .}} FILTER(REGEX(?Musician, '^{}.*', 'i') && ?SubClass != musica:Musicista && EXISTS{{ ?SubClass rdfs:subClassOf musica:Musicista}})}} group by ?MusicianItem ?Age ?BandItem",
    "songs": "SELECT ?Song (group_concat(?Writer; separator=\", \") as ?Writers) ?Album WHERE {{ ?AlbumItem a musica:Album. OPTIONAL {{?AlbumItem musica:contiene ?SongItem .}} OPTIONAL {{?SongItem musica:scrittoDa ?Writer .}} ?AlbumItem rdfs:label ?Album. ?SongItem rdfs:label ?Song. FILTER(REGEX(?Song, '^{}.*', 'i'))}} GROUP BY ?Album ?Song",
    "genres": "SELECT ?Genre (COUNT(?Song) AS ?Songs) WHERE {{?GenreItem rdfs:label ?Genre. ?GenreItem a musica:GenereMusicale. ?Song musica:haGenere ?GenreItem. FILTER(REGEX(?Genre, '^{}.*', 'i'))}} GROUP BY ?GenreItem",
    "events": "SELECT ?Event ?Host ?City ?Nation ?Continent WHERE {{?Host musica:ospiteDi ?EventItem. ?EventItem musica:situatoIn ?City. ?City musica:situatoIn ?Nation. ?Nation musica:situatoIn ?Continent. ?EventItem rdfs:label ?Event. FILTER(REGEX(?Event, '^{}.*', 'i'))}}",
    "labels": "SELECT ?Music_Label ?Musician ?Producer WHERE {{FILTER(REGEX(?Music_Label, '^{}.*', 'i')) ?Music_Label_Item musica:haIngaggiato ?Musician. ?Musician a musica:Musicista. OPTIONAL {{ ?Music_Label_Item musica:haIngaggiato ?Producer. ?Producer a musica:Produttore. ?Music_Label_Item rdfs:label ?Music_Label.}} }}"
  }
}